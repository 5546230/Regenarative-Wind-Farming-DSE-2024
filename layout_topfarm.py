from topfarm.plotting import NoPlot
import numpy as np
import pandas as pd
from py_wake import BastankhahGaussian
from py_wake.wind_turbines import WindTurbines
from py_wake.site import UniformSite
from py_wake.examples.data.hornsrev1 import Hornsrev1Site, V80
from topfarm import TopFarmProblem
from topfarm.cost_models.cost_model_wrappers import CostModelComponent
from topfarm.constraint_components.boundary import XYBoundaryConstraint
from topfarm.constraint_components.spacing import SpacingConstraint
from topfarm.easy_drivers import EasyScipyOptimizeDriver, EasySimpleGADriver
from topfarm.plotting import XYPlotComp, NoPlot
from topfarm.examples.iea37 import get_iea37_initial
import matplotlib.pyplot as plt

import shapely.geometry as sg

import numpy as np
from shapely.geometry import Point, Polygon
# x, y = get_iea37_initial().T
# print(x, y)
# Define the boundary of the wind farm
A = np.array([0, 0])
B = np.array([27.5 * np.cos(np.radians(65.3)),
              27.5 * np.sin(np.radians(65.3))])
C = np.array([B[0] + 43.9 * np.cos(np.radians(-19)),
              B[1] + 43.9 * np.sin(np.radians(-19))])
D = np.array([A[0] + 46.7, A[1]])
boundary_corners = [A, B, C, D]
polygon = Polygon(boundary_corners)
n_wt = 50  # int(polygon.area // 600 * 200)
x = np.array([0.0, 0.8208103235378295, 1.641620647075659, 2.462430970613488, 3.283241294151318, 4.104051617689148, 4.924861941226976, 5.745672264764806, 6.566482588302636, 7.387292911840466, 8.208103235378296, 9.028913558916123, 9.849723882453953, 10.670534205991784, 11.491344529529613, 1.9, 2.763967393842546, 3.627934787685093, 4.49190218152764, 5.3558695753701855, 6.219836969212732, 7.083804363055279, 7.947771756897826, 8.811739150740372, 9.67570654458292, 10.539673938425466, 11.40364133226801, 12.26760872611056, 13.131576119953104, 3.8, 4.643985208490507, 5.487970416981015, 6.331955625471522, 7.175940833962029, 8.019926042452536, 8.863911250943044, 9.707896459433552, 10.551881667924059, 11.395866876414566, 12.239852084905074, 13.083837293395579, 13.927822501886087, 14.771807710376596, 5.699999999999999, 6.524003023138468, 7.348006046276936, 8.172009069415404, 8.996012092553872, 9.820015115692339, 10.644018138830809, 11.468021161969276, 12.292024185107744, 13.116027208246212, 13.94003023138468, 14.764033254523147, 15.588036277661617, 16.41203930080008, 7.6, 8.404020837786428, 9.208041675572858, 10.012062513359286, 10.816083351145714, 11.620104188932144, 12.424125026718574, 13.228145864505002, 14.03216670229143, 14.836187540077859, 15.640208377864289, 16.444229215650715, 17.248250053437147, 18.052270891223575, 9.5, 10.349375206803922, 11.198750413607844, 12.048125620411767, 12.897500827215689, 13.74687603401961, 14.596251240823534, 15.445626447627454, 16.295001654431378, 17.1443768612353, 17.99375206803922, 18.84312727484314, 19.692502481647068, 11.399999999999999, 12.227727839339211, 13.055455678678424, 13.883183518017638, 14.710911357356851, 15.538639196696064, 16.366367036035278, 17.19409487537449, 18.021822714713704, 18.849550554052918, 19.67727839339213, 20.50500623273134, 21.332734072070554, 13.299999999999999, 14.106080471874503, 14.912160943749008, 15.718241415623512, 16.524321887498015, 17.33040235937252, 18.136482831247022, 18.942563303121528, 19.748643774996033, 20.554724246870535, 21.360804718745037, 22.166885190619542, 22.972965662494047, 15.2, 15.984433104409794, 16.76886620881959, 17.553299313229385, 18.337732417639177, 19.122165522048974, 19.906598626458766, 20.691031730868563, 21.47546483527836, 22.259897939688152, 23.044331044097945, 23.82876414850774, 24.613197252917537, 17.099999999999998, 17.932129894849183, 18.764259789698365, 19.59638968454755, 20.428519579396735, 21.26064947424592, 22.092779369095105, 22.924909263944286, 23.75703915879347, 24.589169053642657, 25.421298948491838, 26.253428843341023, 19.0, 19.808514584887682, 20.617029169775368, 21.42554375466305, 22.234058339550735, 23.042572924438417, 23.8510875093261, 24.65960209421378, 25.468116679101467, 26.276631263989152, 27.085145848876834, 27.893660433764516, 20.9, 21.68489927492618, 22.469798549852364, 23.254697824778546, 24.03959709970473, 24.82449637463091, 25.609395649557094, 26.394294924483276, 27.17919419940946, 27.96409347433564, 28.748992749261824, 29.533892024188006, 22.799999999999997, 23.56128396496468, 24.32256792992936, 25.083851894894043, 25.845135859858726, 26.606419824823405, 27.367703789788088, 28.12898775475277, 28.89027171971745, 29.651555684682133, 30.412839649646813, 31.174123614611496, 24.7, 25.511435520503497, 26.322871041006998, 27.134306561510495, 27.945742082013993, 28.757177602517494, 29.56861312302099, 30.38004864352449, 31.19148416402799, 32.00291968453149, 32.814355205034985, 26.599999999999998, 27.385458679545845, 28.170917359091693, 28.95637603863754, 29.741834718183387, 30.527293397729235, 31.312752077275086, 32.09821075682093, 32.88366943636678, 33.66912811591263, 34.454586795458475, 28.5, 29.259481838588197, 30.018963677176394, 30.77844551576459, 31.537927354352785, 32.29740919294098, 33.05689103152918, 33.81637287011738, 34.57585470870557, 35.33533654729377, 36.094818385881965, 30.4, 31.133504997630546, 31.86700999526109, 32.60051499289163, 33.33401999052218, 34.06752498815273, 34.80102998578327, 35.53453498341382, 36.26803998104437, 37.00154497867491, 37.735049976305454, 32.3, 33.08614239630322, 33.87228479260643, 34.65842718890965, 35.44456958521286, 36.23071198151608, 37.0168543778193, 37.80299677412251, 38.58913917042573, 39.375281566728944, 34.199999999999996, 34.9572792396836, 35.714558479367206, 36.47183771905081, 37.229116958734416, 37.98639619841802, 38.74367543810162, 39.500954677785224, 40.25823391746883, 41.015513157152434, 36.1, 36.82841608306399, 37.55683216612798, 38.28524824919198, 39.01366433225597, 39.74208041531996, 40.47049649838395, 41.19891258144794, 41.92732866451194, 42.65574474757593, 38.0, 38.69955292644438, 39.39910585288876, 40.09865877933314, 40.79821170577752, 41.4977646322219, 42.19731755866628, 42.89687048511066, 43.59642341155504, 44.29597633799942, 39.9, 40.654525991052864, 41.40905198210572, 42.16357797315859, 42.918103964211454, 43.67262995526432, 44.42715594631718, 45.181681937370044, 45.93620792842291, 41.8, 42.5220549398558, 43.244109879711594, 43.966164819567396, 44.6882197594232, 45.410274699279, 46.132329639134795, 46.8543845789906, 47.5764395188464, 43.699999999999996, 44.389583888658734, 45.079167777317465, 45.768751665976204, 46.45833555463494, 47.147919443293674, 47.83750333195241, 48.52708722061115, 49.21667110926988, 52.99960999833962,
              51.739687998671705, 50.479765999003774, 49.21984399933585, 47.95992199966793, 46.7])
y = np.array([0.0, 1.784569634427489, 3.569139268854978, 5.353708903282468, 7.138278537709956, 8.922848172137446, 10.707417806564935, 12.491987440992425, 14.276557075419912, 16.061126709847404, 17.84569634427489, 19.630265978702383, 21.41483561312987, 23.19940524755736, 24.98397488198485, 0, 1.878399834862463, 3.756799669724926, 5.635199504587389, 7.513599339449852, 9.391999174312316, 11.270399009174778, 13.148798844037241, 15.027198678899705, 16.905598513762165, 18.783998348624632, 20.662398183487092, 22.540798018349555, 24.41919785321202, 0, 1.8349554480337837, 3.6699108960675675, 5.504866344101352, 7.339821792135135, 9.174777240168918, 11.009732688202703, 12.844688136236487, 14.67964358427027, 16.514599032304055, 18.349554480337837, 20.18450992837162, 22.019465376405407, 23.85442082443919, 0.0, 1.7915110612051042, 3.5830221224102083, 5.374533183615313, 7.166044244820417, 8.957555306025522, 10.749066367230625, 12.540577428435729, 14.332088489640833, 16.123599550845938, 17.915110612051045, 19.706621673256144, 21.49813273446125, 23.289643795666354, 0, 1.7480666743764248, 3.4961333487528496, 5.244200023129274, 6.992266697505699, 8.740333371882123, 10.488400046258548, 12.236466720634974, 13.984533395011399, 15.732600069387823, 17.480666743764246, 19.228733418140674, 20.976800092517095, 22.724866766893523, 0, 1.8466741448433908, 3.6933482896867815, 5.540022434530172, 7.386696579373563, 9.233370724216954, 11.080044869060345, 12.926719013903735, 14.773393158747126, 16.620067303590517, 18.466741448433908, 20.3134155932773, 22.16008973812069, 0, 1.7996093924456549, 3.5992187848913098, 5.398828177336965, 7.1984375697826195, 8.998046962228276, 10.79765635467393, 12.597265747119584, 14.396875139565239, 16.196484532010896, 17.996093924456552, 19.795703316902202, 21.59531270934786, 0.0, 1.7525446400479192, 3.5050892800958384, 5.257633920143758, 7.010178560191677, 8.762723200239597, 10.515267840287516, 12.267812480335435, 14.020357120383354, 15.772901760431273, 17.525446400479193, 19.277991040527112, 21.03053568057503, 0, 1.7054798876501829, 3.4109597753003658, 5.116439662950548, 6.8219195506007315, 8.527399438250914, 10.232879325901097, 11.93835921355128, 13.643839101201463, 15.349318988851646, 17.054798876501827, 18.760278764152012, 20.465758651802194, 0, 1.809180147548124, 3.618360295096248, 5.427540442644371, 7.236720590192496, 9.04590073774062, 10.855080885288743, 12.664261032836867, 14.473441180384992, 16.282621327933114, 18.09180147548124, 19.900981623029363, 0, 1.7578367812960483, 3.5156735625920965, 5.2735103438881445, 7.031347125184193, 8.789183906480242, 10.547020687776289,
             12.304857469072337, 14.062694250368386, 15.820531031664435, 17.578367812960483, 19.33620459425653, 0.0, 1.7064934150439726, 3.412986830087945, 5.119480245131918, 6.82597366017589, 8.532467075219863, 10.238960490263835, 11.945453905307808, 13.65194732035178, 15.358440735395753, 17.064934150439726, 18.771427565483698, 0, 1.6551500487918973, 3.3103000975837946, 4.965450146375692, 6.620600195167589, 8.275750243959488, 9.930900292751383, 11.586050341543281, 13.241200390335178, 14.896350439127076, 16.551500487918975, 18.20665053671087, 0, 1.7641873507938035, 3.528374701587607, 5.2925620523814105, 7.056749403175214, 8.820936753969017, 10.585124104762821, 12.349311455556624, 14.113498806350428, 15.877686157144232, 17.641873507938033, 0, 1.70770964791652, 3.41541929583304, 5.123128943749561, 6.83083859166608, 8.5385482395826, 10.246257887499121, 11.95396753541564, 13.66167718333216, 15.369386831248681, 17.0770964791652, 0.0, 1.6512319450392368, 3.3024638900784735, 4.95369583511771, 6.604927780156947, 8.256159725196182, 9.90739167023542, 11.558623615274657, 13.209855560313894, 14.86108750535313, 16.512319450392365, 0, 1.5947542421619534, 3.1895084843239068, 4.78426272648586, 6.3790169686478135, 7.973771210809767, 9.56852545297172, 11.163279695133673, 12.758033937295627, 14.352788179457582, 15.947542421619534, 0, 1.7091961547607455, 3.418392309521491, 5.127588464282236, 6.836784619042982, 8.545980773803727, 10.255176928564472, 11.964373083325219, 13.673569238085964, 15.382765392846709, 0, 1.646443151563764, 3.292886303127528, 4.939329454691292, 6.585772606255056, 8.232215757818821, 9.878658909382583, 11.525102060946347, 13.171545212510113, 14.817988364073877, 0.0, 1.5836901483667822, 3.1673802967335645, 4.751070445100347, 6.334760593467129, 7.9184507418339125, 9.502140890200694, 11.085831038567475, 12.669521186934258, 14.253211335301042, 0, 1.520937145169801, 3.041874290339602, 4.562811435509403, 6.083748580679204, 7.604685725849006, 9.125622871018805, 10.646560016188607, 12.167497161358408, 13.68843430652821, 0, 1.6404571597194222, 3.2809143194388444, 4.921371479158266, 6.561828638877689, 8.202285798597112, 9.842742958316531, 11.483200118035954, 13.123657277755377, 0, 1.5698600311228181, 3.1397200622456363, 4.709580093368455, 6.2794401244912725, 7.84930015561409, 9.41916018673691, 10.989020217859727, 12.558880248982545, 0.0, 1.499262902526214, 2.998525805052428, 4.497788707578642, 5.997051610104856, 7.496314512631071, 8.995577415157284, 10.494840317683499, 11.994103220209713, 10.691532901315671, 8.553226321052538, 6.4149197407894025, 4.276613160526269, 2.138306580263134, 0.0])

# remove two points in the middle
# x = np.delete(x, [100, 110, 120, 130])
# y = np.delete(y, [100, 110, 120, 130])
# initial_positions = np.vstack([x, y]).T
initial_positions = np.loadtxt('optimized_layout.csv', delimiter=',')
# plot the initial layout
plt.figure()
plt.plot(*polygon.exterior.xy, 'k-')
plt.scatter(initial_positions[:, 0], initial_positions[:, 1])
plt.show()

n_wt = len(initial_positions)
print(initial_positions[:, 0].shape)
# Define the wind rose (example data)
# Wind directions from 0 to 350 degrees
# find most frequent wind direction
df = pd.read_csv('angle.csv')
wind_directions = df['angle'].values
wind_frequencies = df['frequency'].values
most_frequent_direction = wind_directions[np.argmax(wind_frequencies)]
wd = most_frequent_direction

# Set up the wind farm site and turbine model
site = UniformSite(ws=13.5)
wind_turbine = V80()

# Define the AEP cost model with the BastankhahGaussian wake model
wake_model = BastankhahGaussian(site, wind_turbine)


def aep_func(x, y, wd=wd):
    # sim_res = wake_model(x, y, wd=wd)
    # aep = sim_res.aep().sum()
    # Find the minimum distance between each turbine
    x_diff = x[:, np.newaxis] - x
    y_diff = y[:, np.newaxis] - y
    distances = np.sqrt(x_diff**2 + y_diff**2)
    np.fill_diagonal(distances, np.inf)
    min_distance = np.min(distances)
    return min_distance


aep_comp = CostModelComponent(
    input_keys=['x', 'y'],
    n_wt=n_wt,
    cost_function=aep_func,
    objective=True,
    maximize=True,
)


# use the new driver in your problem
problem = TopFarmProblem(
    design_vars={'x': initial_positions[:, 0].flatten(
    ), 'y': initial_positions[:, 1].flatten()},
    n_wt=n_wt,
    cost_comp=aep_comp,
    # set miniter to the desired minimum number of iterations
    driver=EasyScipyOptimizeDriver(),
    plot_comp=NoPlot(),
    constraints=[XYBoundaryConstraint(
        boundary_corners), SpacingConstraint(1.95)]
)

sol = problem.optimize()

# plot the wind farm layout
plt.figure()
plt.plot(*polygon.exterior.xy, 'k-')

x, y = sol[1]['x'], sol[1]['y']
# save the optimized layout
np.savetxt('optimized_layout.csv', np.vstack([x, y]).T, delimiter=',')
print(aep_func(x, y))
plt.scatter(x, y)
plt.show()
